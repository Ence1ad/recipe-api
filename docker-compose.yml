version: "3.9"

services:
  db:
    container_name: postgres_db
    image: postgres:15.4
    restart: unless-stopped
    env_file: .env
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
      timeout: 5s
      interval: 10s
      retries: 5
      start_period: 10s
    command:
      - "postgres"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
#      - ./container_conf/postgres/init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh:ro
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 4g
        reservations:
          cpus: '0.25'
          memory: 2g

  app:
    build:
      context: .
      args:
        - DEV=true
    restart: unless-stopped
    env_file: .env
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
    command: >
      sh -c "python manage.py wait_for_db && 
             python manage.py migrate && 
             python manage.py runserver 0.0.0.0:8000"
    depends_on:
      db:
        condition: service_healthy

volumes:
  postgres_data: